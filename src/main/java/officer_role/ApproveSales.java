/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package officer_role;

import Classes.IssueSalesInvoice;
import Classes.loginSession;
import java.awt.Color;
import java.awt.Component;
import javax.swing.DefaultCellEditor;
import javax.swing.table.DefaultTableModel;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author User
 */
public class ApproveSales extends javax.swing.JFrame {
    loginSession ls;
    public ApproveSales(loginSession session) {
        initComponents();
        this.ls = session;
        
        Color background = new Color(243, 224, 190);
        getContentPane().setBackground(background);
        DefaultTableModel model = (DefaultTableModel) ApprovedSales.getModel();
        IssueSalesInvoice.displayApprovedSales(model);
        this.setLocationRelativeTo(null);//set the location to center
        
        int columnIndex6 = 5; // Index is 0-based, so 5 corresponds to the sixth column
        javax.swing.table.TableColumn column6 = ApprovedSales.getColumnModel().getColumn(columnIndex6);
        column6.setCellEditor(new DefaultCellEditor(createComboBox("Approved", "Unapproved", "Closed")));
        column6.setCellRenderer(new JComboBoxTableCellRenderer("Approved", "Unapproved", "Closed"));
    }
    
    private JComboBox<String> createComboBox(String... items) {
        JComboBox<String> comboBox = new JComboBox<>(items);
        return comboBox;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        BackBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ApprovedSales = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        SearchText = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        IssueInvoice = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 27)); // NOI18N
        jLabel1.setText("Sales Product Status");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, -1));

        BackBtn.setBackground(new java.awt.Color(255, 0, 51));
        BackBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BackBtn.setForeground(new java.awt.Color(255, 255, 255));
        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });
        getContentPane().add(BackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, -1, -1));

        ApprovedSales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sales ID", "SalesPerson ID", "Date", "Customer", "Total Price (RM)", "Approval Status", "Product Status"
            }
        ));
        ApprovedSales.setRowHeight(27);
        ApprovedSales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ApprovedSalesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ApprovedSales);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 710, 220));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-point-38.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, -1, -1));

        jLabel3.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        jLabel3.setText("Search:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 180, -1, -1));

        SearchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTextActionPerformed(evt);
            }
        });
        SearchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchTextKeyReleased(evt);
            }
        });
        getContentPane().add(SearchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 180, 130, -1));

        updateButton.setBackground(new java.awt.Color(0, 102, 102));
        updateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 90, -1));

        IssueInvoice.setBackground(new java.awt.Color(0, 102, 102));
        IssueInvoice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        IssueInvoice.setForeground(new java.awt.Color(255, 255, 255));
        IssueInvoice.setText("Create Invoice");
        IssueInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueInvoiceActionPerformed(evt);
            }
        });
        getContentPane().add(IssueInvoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 120, -1));

        jLabel4.setFont(new java.awt.Font("Serif", 0, 20)); // NOI18N
        jLabel4.setText("Issue Sales Invoice & Update Status");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, -1, -1));

        jLabel5.setFont(new java.awt.Font("SansSerif", 3, 10)); // NOI18N
        jLabel5.setText("SELECT A SALES ORDER TO ISSUE AN INVOICE:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        OfficerMainMenu a = new OfficerMainMenu(ls);
        a.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BackBtnActionPerformed

    private void SearchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchTextActionPerformed

    private void IssueInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueInvoiceActionPerformed
        int selectedRow = ApprovedSales.getSelectedRow();
        if (selectedRow != -1){
            DefaultTableModel model = (DefaultTableModel) ApprovedSales.getModel();
            String customerName = model.getValueAt(selectedRow, 3).toString(); // customerName is in the fourth column
            String salesDate = model.getValueAt(selectedRow, 2).toString();
            String salesPersonID = model.getValueAt(selectedRow, 1).toString();
            String salesID = model.getValueAt(selectedRow, 0).toString();
            if (!IssueSalesInvoice.verifyInvoiceExist(ApprovedSales)) {
                // Proceed with issuing the invoice
                SalesInvoice a = new SalesInvoice(customerName, salesDate, salesPersonID, salesID, ls);
                a.setVisible(true);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_IssueInvoiceActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        int selectedRow = ApprovedSales.getSelectedRow();
        if (selectedRow != -1){
            DefaultTableModel model = (DefaultTableModel) ApprovedSales.getModel();
            String salesID = model.getValueAt(selectedRow, 0).toString();
            String salesApprovalStatus = model.getValueAt(selectedRow, 5).toString();
            IssueSalesInvoice.setApproveSalesInstance(this);
            boolean update = IssueSalesInvoice.updateSalesData(salesID, salesApprovalStatus);
            if (update) {
                model.setRowCount(0);
                IssueSalesInvoice.displayApprovedSales(model);
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    public void refreshForm() {
        DefaultTableModel model = (DefaultTableModel) ApprovedSales.getModel();
        model.setRowCount(0); // Clear the table
        IssueSalesInvoice.displayApprovedSales(model); // Display the updated data
    }
    
    private void ApprovedSalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ApprovedSalesMouseClicked
        
    }//GEN-LAST:event_ApprovedSalesMouseClicked

    private void SearchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchTextKeyReleased
        String search = SearchText.getText().toLowerCase();
        DefaultTableModel table = (DefaultTableModel)ApprovedSales.getModel();
        TableRowSorter<DefaultTableModel> tData = new TableRowSorter<>(table);
        ApprovedSales.setRowSorter(tData);
        tData.setRowFilter(RowFilter.regexFilter("(?i)" + search));   //Set a RowFilter with a custom matcher that ignores case
    }//GEN-LAST:event_SearchTextKeyReleased

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ApproveSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ApproveSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ApproveSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ApproveSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ApproveSales(ls).setVisible(true);
//            }
//        });
//    }
    
    private static class JComboBoxTableCellRenderer extends JComboBox<String> implements TableCellRenderer {
        public JComboBoxTableCellRenderer(String... items) {
            super(items);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setSelectedItem(value);
            if (value == null) {
            setSelectedIndex(0); // Assuming the default value is at index 0
        }
        return this;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ApprovedSales;
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton IssueInvoice;
    private javax.swing.JTextField SearchText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
